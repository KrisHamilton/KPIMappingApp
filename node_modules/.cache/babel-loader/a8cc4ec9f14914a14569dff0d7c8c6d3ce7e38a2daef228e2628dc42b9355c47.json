{"ast":null,"code":"/*! dom-to-image-more 20-08-2025 */\n(l => {\n  let f = (() => {\n      let e = 0;\n      return {\n        escape: function (e) {\n          return e.replace(/([.*+?^${}()|[\\]/\\\\])/g, \"\\\\$1\");\n        },\n        isDataUrl: function (e) {\n          return -1 !== e.search(/^(data:)/);\n        },\n        canvasToBlob: function (t) {\n          if (t.toBlob) return new Promise(function (e) {\n            t.toBlob(e);\n          });\n          return (r => new Promise(function (e) {\n            var t = s(r.toDataURL().split(\",\")[1]),\n              n = t.length,\n              o = new Uint8Array(n);\n            for (let e = 0; e < n; e++) o[e] = t.charCodeAt(e);\n            e(new Blob([o], {\n              type: \"image/png\"\n            }));\n          }))(t);\n        },\n        resolveUrl: function (e, t) {\n          var n = document.implementation.createHTMLDocument(),\n            o = n.createElement(\"base\"),\n            r = (n.head.appendChild(o), n.createElement(\"a\"));\n          return n.body.appendChild(r), o.href = t, r.href = e, r.href;\n        },\n        getAndEncode: function (l) {\n          let e = d.impl.urlCache.find(function (e) {\n            return e.url === l;\n          });\n          e || (e = {\n            url: l,\n            promise: null\n          }, d.impl.urlCache.push(e));\n          null === e.promise && (d.impl.options.cacheBust && (l += (/\\?/.test(l) ? \"&\" : \"?\") + new Date().getTime()), e.promise = new Promise(function (n) {\n            let r = new XMLHttpRequest();\n            function i(e) {\n              console.error(e), n(\"\");\n            }\n            function t() {\n              var e = d.impl.options.imagePlaceholder;\n              e ? n(e) : i(\"Status:\" + r.status + \" while fetching resource: \" + l);\n            }\n            if (r.timeout = d.impl.options.httpTimeout, r.onerror = t, r.ontimeout = t, r.onloadend = function () {\n              if (r.readyState === XMLHttpRequest.DONE) {\n                var e = r.status;\n                if (0 === e && l.toLowerCase().startsWith(\"file://\") || 200 <= e && e <= 300 && null !== r.response) {\n                  e = r.response;\n                  e instanceof Blob || i(\"Expected response to be a Blob, but got: \" + typeof e);\n                  let t = new FileReader();\n                  t.onloadend = function () {\n                    var e = t.result;\n                    n(e);\n                  };\n                  try {\n                    t.readAsDataURL(e);\n                  } catch (e) {\n                    i(\"Failed to read the response as Data URL: \" + e.toString());\n                  }\n                } else t();\n              }\n            }, 0 < d.impl.options.useCredentialsFilters.length && (d.impl.options.useCredentials = 0 < d.impl.options.useCredentialsFilters.filter(e => 0 <= l.search(e)).length), d.impl.options.useCredentials && (r.withCredentials = !0), d.impl.options.corsImg && 0 === l.indexOf(\"http\") && -1 === l.indexOf(window.location.origin)) {\n              var e = \"POST\" === (d.impl.options.corsImg.method || \"GET\").toUpperCase() ? \"POST\" : \"GET\";\n              r.open(e, (d.impl.options.corsImg.url || \"\").replace(\"#{cors}\", l), !0);\n              let t = !1,\n                n = d.impl.options.corsImg.headers || {},\n                o = (Object.keys(n).forEach(function (e) {\n                  -1 !== n[e].indexOf(\"application/json\") && (t = !0), r.setRequestHeader(e, n[e]);\n                }), (e => {\n                  try {\n                    return JSON.parse(JSON.stringify(e));\n                  } catch (e) {\n                    i(\"corsImg.data is missing or invalid:\" + e.toString());\n                  }\n                })(d.impl.options.corsImg.data || \"\"));\n              Object.keys(o).forEach(function (e) {\n                \"string\" == typeof o[e] && (o[e] = o[e].replace(\"#{cors}\", l));\n              }), r.responseType = \"blob\", r.send(t ? JSON.stringify(o) : o);\n            } else r.open(\"GET\", l, !0), r.responseType = \"blob\", r.send();\n          }));\n          return e.promise;\n        },\n        uid: function () {\n          return \"u\" + (\"0000\" + (Math.random() * Math.pow(36, 4) << 0).toString(36)).slice(-4) + e++;\n        },\n        asArray: function (t) {\n          var n = [],\n            o = t.length;\n          for (let e = 0; e < o; e++) n.push(t[e]);\n          return n;\n        },\n        escapeXhtml: function (e) {\n          return e.replace(/%/g, \"%25\").replace(/#/g, \"%23\").replace(/\\n/g, \"%0A\");\n        },\n        makeImage: function (r) {\n          return \"data:,\" !== r ? new Promise(function (e, t) {\n            let n = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\"),\n              o = new Image();\n            d.impl.options.useCredentials && (o.crossOrigin = \"use-credentials\"), o.onload = function () {\n              document.body.removeChild(n), window && window.requestAnimationFrame ? window.requestAnimationFrame(function () {\n                e(o);\n              }) : e(o);\n            }, o.onerror = e => {\n              document.body.removeChild(n), t(e);\n            }, n.appendChild(o), o.src = r, document.body.appendChild(n);\n          }) : Promise.resolve();\n        },\n        width: function (e) {\n          var t = i(e, \"width\");\n          if (!isNaN(t)) return t;\n          var t = i(e, \"border-left-width\"),\n            n = i(e, \"border-right-width\");\n          return e.scrollWidth + t + n;\n        },\n        height: function (e) {\n          var t = i(e, \"height\");\n          if (!isNaN(t)) return t;\n          var t = i(e, \"border-top-width\"),\n            n = i(e, \"border-bottom-width\");\n          return e.scrollHeight + t + n;\n        },\n        getWindow: t,\n        isElement: r,\n        isElementHostForOpenShadowRoot: function (e) {\n          return r(e) && null !== e.shadowRoot;\n        },\n        isShadowRoot: n,\n        isInShadowRoot: o,\n        isHTMLElement: function (e) {\n          return e instanceof t(e).HTMLElement;\n        },\n        isHTMLCanvasElement: function (e) {\n          return e instanceof t(e).HTMLCanvasElement;\n        },\n        isHTMLInputElement: function (e) {\n          return e instanceof t(e).HTMLInputElement;\n        },\n        isHTMLImageElement: function (e) {\n          return e instanceof t(e).HTMLImageElement;\n        },\n        isHTMLLinkElement: function (e) {\n          return e instanceof t(e).HTMLLinkElement;\n        },\n        isHTMLScriptElement: function (e) {\n          return e instanceof t(e).HTMLScriptElement;\n        },\n        isHTMLStyleElement: function (e) {\n          return e instanceof t(e).HTMLStyleElement;\n        },\n        isHTMLTextAreaElement: function (e) {\n          return e instanceof t(e).HTMLTextAreaElement;\n        },\n        isShadowSlotElement: function (e) {\n          return o(e) && e instanceof t(e).HTMLSlotElement;\n        },\n        isSVGElement: function (e) {\n          return e instanceof t(e).SVGElement;\n        },\n        isSVGRectElement: function (e) {\n          return e instanceof t(e).SVGRectElement;\n        },\n        isDimensionMissing: function (e) {\n          return isNaN(e) || e <= 0;\n        }\n      };\n      function t(e) {\n        e = e ? e.ownerDocument : void 0;\n        return (e ? e.defaultView : void 0) || window || l;\n      }\n      function n(e) {\n        return e instanceof t(e).ShadowRoot;\n      }\n      function o(e) {\n        return null != e && void 0 !== e.getRootNode && n(e.getRootNode());\n      }\n      function r(e) {\n        return e instanceof t(e).Element;\n      }\n      function i(t, n) {\n        if (t.nodeType === m) {\n          let e = h(t).getPropertyValue(n);\n          if (\"px\" === e.slice(-2)) return e = e.slice(0, -2), parseFloat(e);\n        }\n        return NaN;\n      }\n    })(),\n    r = (() => {\n      let o = /url\\(\\s*([\"']?)((?:\\\\.|[^\\\\)])+)\\1\\s*\\)/gm;\n      return {\n        inlineAll: function (t, o, r) {\n          if (!e(t)) return Promise.resolve(t);\n          return Promise.resolve(t).then(n).then(function (e) {\n            let n = Promise.resolve(t);\n            return e.forEach(function (t) {\n              n = n.then(function (e) {\n                return i(e, t, o, r);\n              });\n            }), n;\n          });\n        },\n        shouldProcess: e,\n        impl: {\n          readUrls: n,\n          inline: i,\n          urlAsRegex: r\n        }\n      };\n      function e(e) {\n        return -1 !== e.search(o);\n      }\n      function n(e) {\n        for (var t, n = []; null !== (t = o.exec(e));) n.push(t[2]);\n        return n.filter(function (e) {\n          return !f.isDataUrl(e);\n        });\n      }\n      function r(e) {\n        return new RegExp(\"url\\\\(([\\\"']?)(\".concat(f.escape(e), \")\\\\1\\\\)\"), \"gm\");\n      }\n      function i(n, o, t, e) {\n        return Promise.resolve(o).then(function (e) {\n          return t ? f.resolveUrl(e, t) : e;\n        }).then(e || f.getAndEncode).then(function (e) {\n          var t = r(o);\n          return n.replace(t, \"url($1\".concat(e, \"$1)\"));\n        });\n      }\n    })(),\n    e = {\n      resolveAll: function () {\n        return t().then(function (e) {\n          return Promise.all(e.map(function (e) {\n            return e.resolve();\n          }));\n        }).then(function (e) {\n          return e.join(\"\\n\");\n        });\n      },\n      impl: {\n        readAll: t\n      }\n    };\n  function t() {\n    return Promise.resolve(f.asArray(document.styleSheets)).then(function (e) {\n      let n = [];\n      return e.forEach(function (t) {\n        var e = Object.getPrototypeOf(t);\n        if (Object.prototype.hasOwnProperty.call(e, \"cssRules\")) try {\n          f.asArray(t.cssRules || []).forEach(n.push.bind(n));\n        } catch (e) {\n          console.error(\"domtoimage: Error while reading CSS rules from: \" + t.href, e.toString());\n        }\n      }), n;\n    }).then(function (e) {\n      return e.filter(function (e) {\n        return e.type === CSSRule.FONT_FACE_RULE;\n      }).filter(function (e) {\n        return r.shouldProcess(e.style.getPropertyValue(\"src\"));\n      });\n    }).then(function (e) {\n      return e.map(t);\n    });\n    function t(t) {\n      return {\n        resolve: function () {\n          var e = (t.parentStyleSheet || {}).href;\n          return r.inlineAll(t.cssText, e);\n        },\n        src: function () {\n          return t.style.getPropertyValue(\"src\");\n        }\n      };\n    }\n  }\n  let n = {\n    inlineAll: function t(e) {\n      if (!f.isElement(e)) return Promise.resolve(e);\n      return n(e).then(function () {\n        return f.isHTMLImageElement(e) ? o(e).inline() : Promise.all(f.asArray(e.childNodes).map(function (e) {\n          return t(e);\n        }));\n      });\n      function n(o) {\n        let e = [\"background\", \"background-image\"],\n          t = e.map(function (t) {\n            let e = o.style.getPropertyValue(t),\n              n = o.style.getPropertyPriority(t);\n            return e ? r.inlineAll(e).then(function (e) {\n              o.style.setProperty(t, e, n);\n            }) : Promise.resolve();\n          });\n        return Promise.all(t).then(function () {\n          return o;\n        });\n      }\n    },\n    impl: {\n      newImage: o\n    }\n  };\n  function o(n) {\n    return {\n      inline: function (e) {\n        if (f.isDataUrl(n.src)) return Promise.resolve();\n        return Promise.resolve(n.src).then(e || f.getAndEncode).then(function (t) {\n          return new Promise(function (e) {\n            n.onload = e, n.onerror = e, n.src = t;\n          });\n        });\n      }\n    };\n  }\n  let i = {\n      copyDefaultStyles: !0,\n      imagePlaceholder: void 0,\n      cacheBust: !1,\n      useCredentials: !1,\n      useCredentialsFilters: [],\n      httpTimeout: 3e4,\n      styleCaching: \"strict\",\n      corsImg: void 0,\n      adjustClonedNode: void 0,\n      filterStyles: void 0\n    },\n    d = {\n      toSvg: u,\n      toPng: function (e, t) {\n        return a(e, t).then(function (e) {\n          return e.toDataURL();\n        });\n      },\n      toJpeg: function (e, t) {\n        return a(e, t).then(function (e) {\n          return e.toDataURL(\"image/jpeg\", (t ? t.quality : void 0) || 1);\n        });\n      },\n      toBlob: function (e, t) {\n        return a(e, t).then(f.canvasToBlob);\n      },\n      toPixelData: function (t, e) {\n        return a(t, e).then(function (e) {\n          return e.getContext(\"2d\").getImageData(0, 0, f.width(t), f.height(t)).data;\n        });\n      },\n      toCanvas: a,\n      impl: {\n        fontFaces: e,\n        images: n,\n        util: f,\n        inliner: r,\n        urlCache: [],\n        options: {},\n        copyOptions: function (e) {\n          void 0 === e.copyDefaultStyles ? d.impl.options.copyDefaultStyles = i.copyDefaultStyles : d.impl.options.copyDefaultStyles = e.copyDefaultStyles;\n          d.impl.options.imagePlaceholder = (void 0 === e.imagePlaceholder ? i : e).imagePlaceholder;\n          d.impl.options.cacheBust = (void 0 === e.cacheBust ? i : e).cacheBust;\n          d.impl.options.corsImg = (void 0 === e.corsImg ? i : e).corsImg;\n          d.impl.options.useCredentials = (void 0 === e.useCredentials ? i : e).useCredentials;\n          d.impl.options.useCredentialsFilters = (void 0 === e.useCredentialsFilters ? i : e).useCredentialsFilters;\n          d.impl.options.httpTimeout = (void 0 === e.httpTimeout ? i : e).httpTimeout;\n          d.impl.options.styleCaching = (void 0 === e.styleCaching ? i : e).styleCaching;\n        }\n      }\n    },\n    m = (\"object\" == typeof exports && \"object\" == typeof module ? module.exports = d : l.domtoimage = d, (\"undefined\" != typeof Node ? Node.ELEMENT_NODE : void 0) || 1),\n    h = (void 0 !== l ? l.getComputedStyle : void 0) || (\"undefined\" != typeof window ? window.getComputedStyle : void 0) || globalThis.getComputedStyle,\n    s = (void 0 !== l ? l.atob : void 0) || (\"undefined\" != typeof window ? window.atob : void 0) || globalThis.atob;\n  function u(t, r) {\n    let n = d.impl.util.getWindow(t),\n      i = (r = r || {}, d.impl.copyOptions(r), []);\n    return Promise.resolve(t).then(function (e) {\n      if (e.nodeType === m) return e;\n      var t = e,\n        n = e.parentNode,\n        o = document.createElement(\"span\");\n      return n.replaceChild(o, t), o.append(e), i.push({\n        parent: n,\n        child: t,\n        wrapper: o\n      }), o;\n    }).then(function (e) {\n      return function l(t, s, i, u) {\n        let e = s.filter;\n        if (t === p || f.isHTMLScriptElement(t) || f.isHTMLStyleElement(t) || f.isHTMLLinkElement(t) || null !== i && e && !e(t)) return Promise.resolve();\n        return Promise.resolve(t).then(n).then(o).then(function (e) {\n          return c(e, a(t));\n        }).then(r).then(function (e) {\n          return d(e, t);\n        });\n        function n(e) {\n          return f.isHTMLCanvasElement(e) ? f.makeImage(e.toDataURL()) : e.cloneNode(!1);\n        }\n        function o(e) {\n          return s.adjustClonedNode && s.adjustClonedNode(t, e, !1), Promise.resolve(e);\n        }\n        function r(e) {\n          return s.adjustClonedNode && s.adjustClonedNode(t, e, !0), Promise.resolve(e);\n        }\n        function a(e) {\n          return f.isElementHostForOpenShadowRoot(e) ? e.shadowRoot : e;\n        }\n        function c(n, e) {\n          let o = t(e),\n            r = Promise.resolve();\n          if (0 !== o.length) {\n            let t = h(i(e));\n            f.asArray(o).forEach(function (e) {\n              r = r.then(function () {\n                return l(e, s, t, u).then(function (e) {\n                  e && n.appendChild(e);\n                });\n              });\n            });\n          }\n          return r.then(function () {\n            return n;\n          });\n          function i(e) {\n            return f.isShadowRoot(e) ? e.host : e;\n          }\n          function t(t) {\n            if (f.isShadowSlotElement(t)) {\n              let e = t.assignedNodes();\n              if (e && 0 < e.length) return e;\n            }\n            return t.childNodes;\n          }\n        }\n        function d(u, a) {\n          return !f.isElement(u) || f.isShadowSlotElement(a) ? Promise.resolve(u) : Promise.resolve().then(t).then(n).then(o).then(r).then(e).then(function () {\n            return u;\n          });\n          function e() {\n            f.isHTMLImageElement(u) && (u.removeAttribute(\"loading\"), a.srcset || a.sizes) && (u.removeAttribute(\"srcset\"), u.removeAttribute(\"sizes\"), u.src = a.currentSrc || a.src);\n          }\n          function t() {\n            function o(e, t) {\n              t.font = e.font, t.fontFamily = e.fontFamily, t.fontFeatureSettings = e.fontFeatureSettings, t.fontKerning = e.fontKerning, t.fontSize = e.fontSize, t.fontStretch = e.fontStretch, t.fontStyle = e.fontStyle, t.fontVariant = e.fontVariant, t.fontVariantCaps = e.fontVariantCaps, t.fontVariantEastAsian = e.fontVariantEastAsian, t.fontVariantLigatures = e.fontVariantLigatures, t.fontVariantNumeric = e.fontVariantNumeric, t.fontVariationSettings = e.fontVariationSettings, t.fontWeight = e.fontWeight;\n            }\n            function e(e, t) {\n              let n = h(e);\n              n.cssText ? (t.style.cssText = n.cssText, o(n, t.style)) : (y(s, e, n, i, t), null === i && ([\"inset-block\", \"inset-block-start\", \"inset-block-end\"].forEach(e => t.style.removeProperty(e)), [\"left\", \"right\", \"top\", \"bottom\"].forEach(e => {\n                t.style.getPropertyValue(e) && t.style.setProperty(e, \"0px\");\n              })));\n            }\n            e(a, u);\n          }\n          function n() {\n            let s = f.uid();\n            function t(r) {\n              let i = h(a, r),\n                l = i.getPropertyValue(\"content\");\n              if (\"\" !== l && \"none\" !== l) {\n                let e = u.getAttribute(\"class\") || \"\",\n                  t = (u.setAttribute(\"class\", e + \" \" + s), document.createElement(\"style\"));\n                function n() {\n                  let e = \".\".concat(s, \":\") + r,\n                    t = (i.cssText ? n : o)();\n                  return document.createTextNode(e + \"{\".concat(t, \"}\"));\n                  function n() {\n                    return \"\".concat(i.cssText, \" content: \").concat(l, \";\");\n                  }\n                  function o() {\n                    let e = f.asArray(i).map(t).join(\"; \");\n                    return e + \";\";\n                    function t(e) {\n                      let t = i.getPropertyValue(e),\n                        n = i.getPropertyPriority(e) ? \" !important\" : \"\";\n                      return e + \": \" + t + n;\n                    }\n                  }\n                }\n                t.appendChild(n()), u.appendChild(t);\n              }\n            }\n            [\":before\", \":after\"].forEach(function (e) {\n              t(e);\n            });\n          }\n          function o() {\n            f.isHTMLTextAreaElement(a) && (u.innerHTML = a.value), f.isHTMLInputElement(a) && u.setAttribute(\"value\", a.value);\n          }\n          function r() {\n            f.isSVGElement(u) && (u.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\"), f.isSVGRectElement(u)) && [\"width\", \"height\"].forEach(function (e) {\n              let t = u.getAttribute(e);\n              t && u.style.setProperty(e, t);\n            });\n          }\n        }\n      }(e, r, null, n);\n    }).then(r.disableEmbedFonts ? Promise.resolve(t) : c).then(r.disableInlineImages ? Promise.resolve(t) : g).then(function (t) {\n      r.bgcolor && (t.style.backgroundColor = r.bgcolor);\n      r.width && (t.style.width = r.width + \"px\");\n      r.height && (t.style.height = r.height + \"px\");\n      r.style && Object.keys(r.style).forEach(function (e) {\n        t.style[e] = r.style[e];\n      });\n      let e = null;\n      \"function\" == typeof r.onclone && (e = r.onclone(t));\n      return Promise.resolve(e).then(function () {\n        return t;\n      });\n    }).then(function (e) {\n      let n = r.width || f.width(t),\n        o = r.height || f.height(t);\n      return Promise.resolve(e).then(function (e) {\n        return e.setAttribute(\"xmlns\", \"http://www.w3.org/1999/xhtml\"), new XMLSerializer().serializeToString(e);\n      }).then(f.escapeXhtml).then(function (e) {\n        var t = (f.isDimensionMissing(n) ? ' width=\"100%\"' : \" width=\\\"\".concat(n, \"\\\"\")) + (f.isDimensionMissing(o) ? ' height=\"100%\"' : \" height=\\\"\".concat(o, \"\\\"\"));\n        return \"<svg xmlns=\\\"http://www.w3.org/2000/svg\\\"\".concat((f.isDimensionMissing(n) ? \"\" : \" width=\\\"\".concat(n, \"\\\"\")) + (f.isDimensionMissing(o) ? \"\" : \" height=\\\"\".concat(o, \"\\\"\")), \"><foreignObject\").concat(t, \">\").concat(e, \"</foreignObject></svg>\");\n      }).then(function (e) {\n        return \"data:image/svg+xml;charset=utf-8,\" + e;\n      });\n    }).then(function (e) {\n      for (; 0 < i.length;) {\n        var t = i.pop();\n        t.parent.replaceChild(t.child, t.wrapper);\n      }\n      return e;\n    }).then(function (e) {\n      return d.impl.urlCache = [], (() => {\n        p && (document.body.removeChild(p), p = null), v && clearTimeout(v), v = setTimeout(() => {\n          v = null, w = {};\n        }, 2e4);\n      })(), e;\n    });\n  }\n  function a(r, i) {\n    return u(r, i = i || {}).then(f.makeImage).then(function (e) {\n      var t = \"number\" != typeof i.scale ? 1 : i.scale,\n        n = ((e, t) => {\n          let n = i.width || f.width(e),\n            o = i.height || f.height(e);\n          return f.isDimensionMissing(n) && (n = f.isDimensionMissing(o) ? 300 : 2 * o), f.isDimensionMissing(o) && (o = n / 2), (e = document.createElement(\"canvas\")).width = n * t, e.height = o * t, i.bgcolor && ((t = e.getContext(\"2d\")).fillStyle = i.bgcolor, t.fillRect(0, 0, e.width, e.height)), e;\n        })(r, t),\n        o = n.getContext(\"2d\");\n      return o.msImageSmoothingEnabled = !1, o.imageSmoothingEnabled = !1, e && (o.scale(t, t), o.drawImage(e, 0, 0)), n;\n    });\n  }\n  let p = null;\n  function c(n) {\n    return e.resolveAll().then(function (e) {\n      var t;\n      return \"\" !== e && (t = document.createElement(\"style\"), n.appendChild(t), t.appendChild(document.createTextNode(e))), n;\n    });\n  }\n  function g(e) {\n    return n.inlineAll(e).then(function () {\n      return e;\n    });\n  }\n  function y(i, l, s, u, e) {\n    let a = d.impl.options.copyDefaultStyles ? ((t, e) => {\n        var n,\n          o = (e => (\"relaxed\" !== t.styleCaching ? e : e.filter((e, t, n) => 0 === t || t === n.length - 1)).join(\">\"))(e = (e => {\n            var t = [];\n            do {\n              if (e.nodeType === m) {\n                var n = e.tagName;\n                if (t.push(n), E.includes(n)) break;\n              }\n            } while (e = e.parentNode);\n            return t;\n          })(e));\n        {\n          if (w[o]) return w[o];\n          e = ((e, t) => {\n            let n = e.body;\n            do {\n              var o = t.pop(),\n                o = e.createElement(o);\n              n.appendChild(o), n = o;\n            } while (0 < t.length);\n            return n.textContent = \"​\", n;\n          })((n = (() => {\n            if (p) return p.contentWindow;\n            t = document.characterSet || \"UTF-8\", e = (e = document.doctype) ? (\"<!DOCTYPE \".concat(s(e.name), \" \").concat(s(e.publicId), \" \") + s(e.systemId)).trim() + \">\" : \"\", (p = document.createElement(\"iframe\")).id = \"domtoimage-sandbox-\" + f.uid(), p.style.visibility = \"hidden\", p.style.position = \"fixed\", document.body.appendChild(p);\n            var e,\n              t,\n              n = p,\n              o = \"domtoimage-sandbox\";\n            try {\n              return n.contentWindow.document.write(e + \"<html><head><meta charset='\".concat(t, \"'><title>\").concat(o, \"</title></head><body></body></html>\")), n.contentWindow;\n            } catch (e) {}\n            var r = document.createElement(\"meta\");\n            r.setAttribute(\"charset\", t);\n            try {\n              var i = document.implementation.createHTMLDocument(o),\n                l = (i.head.appendChild(r), e + i.documentElement.outerHTML);\n              return n.setAttribute(\"srcdoc\", l), n.contentWindow;\n            } catch (e) {}\n            return n.contentDocument.head.appendChild(r), n.contentDocument.title = o, n.contentWindow;\n            function s(e) {\n              var t;\n              return e ? ((t = document.createElement(\"div\")).innerText = e, t.innerHTML) : \"\";\n            }\n          })()).document, e), n = ((e, t) => {\n            let n = {},\n              o = e.getComputedStyle(t);\n            return f.asArray(o).forEach(function (e) {\n              n[e] = \"width\" === e || \"height\" === e ? \"auto\" : o.getPropertyValue(e);\n            }), n;\n          })(n, e);\n          var r = e;\n          do {\n            var i = r.parentElement;\n            null !== i && i.removeChild(r), r = i;\n          } while (r && \"BODY\" !== r.tagName);\n          return w[o] = n;\n        }\n      })(i, l) : {},\n      c = e.style;\n    f.asArray(s).forEach(function (e) {\n      var t, n, o, r;\n      i.filterStyles && !i.filterStyles(l, e) || (n = s.getPropertyValue(e), o = a[e], t = u ? u.getPropertyValue(e) : void 0, c.getPropertyValue(e)) || (n !== o || u && n !== t) && (o = s.getPropertyPriority(e), t = c, n = n, o = o, r = 0 <= [\"background-clip\"].indexOf(e = e), o ? (t.setProperty(e, n, o), r && t.setProperty(\"-webkit-\" + e, n, o)) : (t.setProperty(e, n), r && t.setProperty(\"-webkit-\" + e, n)));\n    });\n  }\n  let v = null,\n    w = {},\n    E = [\"ADDRESS\", \"ARTICLE\", \"ASIDE\", \"BLOCKQUOTE\", \"DETAILS\", \"DIALOG\", \"DD\", \"DIV\", \"DL\", \"DT\", \"FIELDSET\", \"FIGCAPTION\", \"FIGURE\", \"FOOTER\", \"FORM\", \"H1\", \"H2\", \"H3\", \"H4\", \"H5\", \"H6\", \"HEADER\", \"HGROUP\", \"HR\", \"LI\", \"MAIN\", \"NAV\", \"OL\", \"P\", \"PRE\", \"SECTION\", \"SVG\", \"TABLE\", \"UL\", \"math\", \"svg\", \"BODY\", \"HEAD\", \"HTML\"];\n})(this);","map":{"version":3,"names":["l","f","e","escape","replace","isDataUrl","search","canvasToBlob","t","toBlob","Promise","r","s","toDataURL","split","n","length","o","Uint8Array","charCodeAt","Blob","type","resolveUrl","document","implementation","createHTMLDocument","createElement","head","appendChild","body","href","getAndEncode","d","impl","urlCache","find","url","promise","push","options","cacheBust","test","Date","getTime","XMLHttpRequest","i","console","error","imagePlaceholder","status","timeout","httpTimeout","onerror","ontimeout","onloadend","readyState","DONE","toLowerCase","startsWith","response","FileReader","result","readAsDataURL","toString","useCredentialsFilters","useCredentials","filter","withCredentials","corsImg","indexOf","window","location","origin","method","toUpperCase","open","headers","Object","keys","forEach","setRequestHeader","JSON","parse","stringify","data","responseType","send","uid","Math","random","pow","slice","asArray","escapeXhtml","makeImage","createElementNS","Image","crossOrigin","onload","removeChild","requestAnimationFrame","src","resolve","width","isNaN","scrollWidth","height","scrollHeight","getWindow","isElement","isElementHostForOpenShadowRoot","shadowRoot","isShadowRoot","isInShadowRoot","isHTMLElement","HTMLElement","isHTMLCanvasElement","HTMLCanvasElement","isHTMLInputElement","HTMLInputElement","isHTMLImageElement","HTMLImageElement","isHTMLLinkElement","HTMLLinkElement","isHTMLScriptElement","HTMLScriptElement","isHTMLStyleElement","HTMLStyleElement","isHTMLTextAreaElement","HTMLTextAreaElement","isShadowSlotElement","HTMLSlotElement","isSVGElement","SVGElement","isSVGRectElement","SVGRectElement","isDimensionMissing","ownerDocument","defaultView","ShadowRoot","getRootNode","Element","nodeType","m","h","getPropertyValue","parseFloat","NaN","inlineAll","then","shouldProcess","readUrls","inline","urlAsRegex","exec","RegExp","concat","resolveAll","all","map","join","readAll","styleSheets","getPrototypeOf","prototype","hasOwnProperty","call","cssRules","bind","CSSRule","FONT_FACE_RULE","style","parentStyleSheet","cssText","childNodes","getPropertyPriority","setProperty","newImage","copyDefaultStyles","styleCaching","adjustClonedNode","filterStyles","toSvg","u","toPng","a","toJpeg","quality","toPixelData","getContext","getImageData","toCanvas","fontFaces","images","util","inliner","copyOptions","exports","module","domtoimage","Node","ELEMENT_NODE","getComputedStyle","globalThis","atob","parentNode","replaceChild","append","parent","child","wrapper","p","c","cloneNode","host","assignedNodes","removeAttribute","srcset","sizes","currentSrc","font","fontFamily","fontFeatureSettings","fontKerning","fontSize","fontStretch","fontStyle","fontVariant","fontVariantCaps","fontVariantEastAsian","fontVariantLigatures","fontVariantNumeric","fontVariationSettings","fontWeight","y","removeProperty","getAttribute","setAttribute","createTextNode","innerHTML","value","disableEmbedFonts","disableInlineImages","g","bgcolor","backgroundColor","onclone","XMLSerializer","serializeToString","pop","v","clearTimeout","setTimeout","w","scale","fillStyle","fillRect","msImageSmoothingEnabled","imageSmoothingEnabled","drawImage","tagName","E","includes","textContent","contentWindow","characterSet","doctype","name","publicId","systemId","trim","id","visibility","position","write","documentElement","outerHTML","contentDocument","title","innerText","parentElement"],"sources":["C:\\Users\\krist\\Downloads\\KPI Map Builder v2\\node_modules\\dom-to-image-more\\src\\dom-to-image-more.js"],"sourcesContent":["(function (global) {\n    'use strict';\n\n    const util = newUtil();\n    const inliner = newInliner();\n    const fontFaces = newFontFaces();\n    const images = newImages();\n\n    // Default impl options\n    const defaultOptions = {\n        // Default is to copy default styles of elements\n        copyDefaultStyles: true,\n        // Default is to fail on error, no placeholder\n        imagePlaceholder: undefined,\n        // Default cache bust is false, it will use the cache\n        cacheBust: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests)\n        useCredentials: false,\n        // Use (existing) authentication credentials for external URIs (CORS requests) on some filtered requests only\n        useCredentialsFilters: [],\n        // Default resolve timeout\n        httpTimeout: 30000,\n        // Style computation cache tag rules (options are strict, relaxed)\n        styleCaching: 'strict',\n        // Default cors config is to request the image address directly\n        corsImg: undefined,\n        // Callback for adjustClonedNode eventing (to allow adjusting clone's properties)\n        adjustClonedNode: undefined,\n        // Callback to filter style properties to be included in the output\n        filterStyles: undefined,\n    };\n\n    const domtoimage = {\n        toSvg: toSvg,\n        toPng: toPng,\n        toJpeg: toJpeg,\n        toBlob: toBlob,\n        toPixelData: toPixelData,\n        toCanvas: toCanvas,\n        impl: {\n            fontFaces: fontFaces,\n            images: images,\n            util: util,\n            inliner: inliner,\n            urlCache: [],\n            options: {},\n            copyOptions: copyOptions\n        },\n    };\n\n    if (typeof exports === 'object' && typeof module === 'object') {\n        module.exports = domtoimage; // eslint-disable-line no-undef\n    } else {\n        global.domtoimage = domtoimage;\n    }\n\n    // support node and browsers\n    const ELEMENT_NODE =\n        (typeof Node !== 'undefined' ? Node.ELEMENT_NODE : undefined) || 1;\n    const getComputedStyle =\n        (typeof global !== 'undefined' ? global.getComputedStyle : undefined) ||\n        (typeof window !== 'undefined' ? window.getComputedStyle : undefined) ||\n        globalThis.getComputedStyle;\n    const atob =\n        (typeof global !== 'undefined' ? global.atob : undefined) ||\n        (typeof window !== 'undefined' ? window.atob : undefined) ||\n        globalThis.atob;\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options\n     * @param {Function} options.filter - Should return true if passed node should be included in the output\n     *          (excluding node means excluding it's children as well). Not called on the root node.\n     * @param {Function} options.onclone - Callback function which is called when the Document has been cloned for\n     *         rendering, can be used to modify the contents that will be rendered without affecting the original\n     *         source document.\n     * @param {String} options.bgcolor - color for the background, any valid CSS color value.\n     * @param {Number} options.width - width to be applied to node before rendering.\n     * @param {Number} options.height - height to be applied to node before rendering.\n     * @param {Object} options.style - an object whose properties to be copied to node's style before rendering.\n     * @param {Number} options.quality - a Number between 0 and 1 indicating image quality (applicable to JPEG only),\n                defaults to 1.0.\n     * @param {Number} options.scale - a Number multiplier to scale up the canvas before rendering to reduce fuzzy images, defaults to 1.0.\n     * @param {String} options.imagePlaceholder - dataURL to use as a placeholder for failed images, default behaviour is to fail fast on images we can't fetch\n     * @param {Boolean} options.cacheBust - set to true to cache bust by appending the time to the request url\n     * @param {String} options.styleCaching - set to 'strict', 'relaxed' to select style caching rules\n     * @param {Boolean} options.copyDefaultStyles - set to false to disable use of default styles of elements\n     * @param {Boolean} options.disableEmbedFonts - set to true to disable font embedding into the SVG output.\n     * @param {Boolean} options.disableInlineImages - set to true to disable inlining images into the SVG output.\n     * @param {Object} options.corsImg - When the image is restricted by the server from cross-domain requests, the proxy address is passed in to get the image\n     *         - @param {String} url - eg: https://cors-anywhere.herokuapp.com/\n     *         - @param {Enumerator} method - get, post\n     *         - @param {Object} headers - eg: { \"Content-Type\", \"application/json;charset=UTF-8\" }\n     *         - @param {Object} data - post payload\n     * @param {Function} options.adjustClonedNode - callback for adjustClonedNode eventing (to allow adjusting clone's properties)\n     * @param {Function} options.filterStyles - Should return true if passed propertyName should be included in the output\n     * @return {Promise} - A promise that is fulfilled with a SVG image data URL\n     * */\n    function toSvg(node, options) {\n        const ownerWindow = domtoimage.impl.util.getWindow(node);\n        options = options || {};\n        domtoimage.impl.copyOptions(options);\n        const restorations = [];\n\n        return Promise.resolve(node)\n            .then(ensureElement)\n            .then(function (clonee) {\n                return cloneNode(clonee, options, null, ownerWindow);\n            })\n            .then(options.disableEmbedFonts ? Promise.resolve(node) : embedFonts)\n            .then(options.disableInlineImages ? Promise.resolve(node) : inlineImages)\n            .then(applyOptions)\n            .then(makeSvgDataUri)\n            .then(restoreWrappers)\n            .then(clearCache);\n\n        function ensureElement(node) {\n            if (node.nodeType === ELEMENT_NODE) return node;\n\n            const originalChild = node;\n            const originalParent = node.parentNode;\n            const wrappingSpan = document.createElement('span');\n            originalParent.replaceChild(wrappingSpan, originalChild);\n            wrappingSpan.append(node);\n            restorations.push({\n                parent: originalParent,\n                child: originalChild,\n                wrapper: wrappingSpan,\n            });\n            return wrappingSpan;\n        }\n\n        function restoreWrappers(result) {\n            // put the original children back where the wrappers were inserted\n            while (restorations.length > 0) {\n                const restoration = restorations.pop();\n                restoration.parent.replaceChild(restoration.child, restoration.wrapper);\n            }\n\n            return result;\n        }\n\n        function clearCache(result) {\n            domtoimage.impl.urlCache = [];\n            removeSandbox();\n            return result;\n        }\n\n        function applyOptions(clone) {\n            if (options.bgcolor) {\n                clone.style.backgroundColor = options.bgcolor;\n            }\n            if (options.width) {\n                clone.style.width = `${options.width}px`;\n            }\n            if (options.height) {\n                clone.style.height = `${options.height}px`;\n            }\n            if (options.style) {\n                Object.keys(options.style).forEach(function (property) {\n                    clone.style[property] = options.style[property];\n                });\n            }\n\n            let onCloneResult = null;\n\n            if (typeof options.onclone === 'function') {\n                onCloneResult = options.onclone(clone);\n            }\n\n            return Promise.resolve(onCloneResult).then(function () {\n                return clone;\n            });\n        }\n\n        function makeSvgDataUri(clone) {\n            const width = options.width || util.width(node);\n            const height = options.height || util.height(node);\n\n            return Promise.resolve(clone)\n                .then(function (svg) {\n                    svg.setAttribute('xmlns', 'http://www.w3.org/1999/xhtml');\n                    return new XMLSerializer().serializeToString(svg);\n                })\n                .then(util.escapeXhtml)\n                .then(function (xhtml) {\n                    const foreignObjectSizing =\n                        (util.isDimensionMissing(width)\n                            ? ' width=\"100%\"'\n                            : ` width=\"${width}\"`) +\n                        (util.isDimensionMissing(height)\n                            ? ' height=\"100%\"'\n                            : ` height=\"${height}\"`);\n                    const svgSizing =\n                        (util.isDimensionMissing(width) ? '' : ` width=\"${width}\"`) +\n                        (util.isDimensionMissing(height) ? '' : ` height=\"${height}\"`);\n                    return `<svg xmlns=\"http://www.w3.org/2000/svg\"${svgSizing}><foreignObject${foreignObjectSizing}>${xhtml}</foreignObject></svg>`;\n                })\n                .then(function (svg) {\n                    return `data:image/svg+xml;charset=utf-8,${svg}`;\n                });\n        }\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a Uint8Array containing RGBA pixel data.\n     * */\n    function toPixelData(node, options) {\n        return draw(node, options).then(function (canvas) {\n            return canvas\n                .getContext('2d')\n                .getImageData(0, 0, util.width(node), util.height(node)).data;\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image data URL\n     * */\n    function toPng(node, options) {\n        return draw(node, options).then(function (canvas) {\n            return canvas.toDataURL();\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a JPEG image data URL\n     * */\n    function toJpeg(node, options) {\n        return draw(node, options).then(function (canvas) {\n            return canvas.toDataURL(\n                'image/jpeg',\n                (options ? options.quality : undefined) || 1.0\n            );\n        });\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a PNG image blob\n     * */\n    function toBlob(node, options) {\n        return draw(node, options).then(util.canvasToBlob);\n    }\n\n    /**\n     * @param {Node} node - The DOM Node object to render\n     * @param {Object} options - Rendering options, @see {@link toSvg}\n     * @return {Promise} - A promise that is fulfilled with a canvas object\n     * */\n    function toCanvas(node, options) {\n        return draw(node, options);\n    }\n\n    function copyOptions(options) {\n        // Copy options to impl options for use in impl\n        if (typeof options.copyDefaultStyles === 'undefined') {\n            domtoimage.impl.options.copyDefaultStyles = defaultOptions.copyDefaultStyles;\n        } else {\n            domtoimage.impl.options.copyDefaultStyles = options.copyDefaultStyles;\n        }\n\n        if (typeof options.imagePlaceholder === 'undefined') {\n            domtoimage.impl.options.imagePlaceholder = defaultOptions.imagePlaceholder;\n        } else {\n            domtoimage.impl.options.imagePlaceholder = options.imagePlaceholder;\n        }\n\n        if (typeof options.cacheBust === 'undefined') {\n            domtoimage.impl.options.cacheBust = defaultOptions.cacheBust;\n        } else {\n            domtoimage.impl.options.cacheBust = options.cacheBust;\n        }\n\n        if (typeof options.corsImg === 'undefined') {\n            domtoimage.impl.options.corsImg = defaultOptions.corsImg;\n        } else {\n            domtoimage.impl.options.corsImg = options.corsImg;\n        }\n\n        if (typeof options.useCredentials === 'undefined') {\n            domtoimage.impl.options.useCredentials = defaultOptions.useCredentials;\n        } else {\n            domtoimage.impl.options.useCredentials = options.useCredentials;\n        }\n\n        if (typeof options.useCredentialsFilters === 'undefined') {\n            domtoimage.impl.options.useCredentialsFilters =\n                defaultOptions.useCredentialsFilters;\n        } else {\n            domtoimage.impl.options.useCredentialsFilters = options.useCredentialsFilters;\n        }\n\n        if (typeof options.httpTimeout === 'undefined') {\n            domtoimage.impl.options.httpTimeout = defaultOptions.httpTimeout;\n        } else {\n            domtoimage.impl.options.httpTimeout = options.httpTimeout;\n        }\n\n        if (typeof options.styleCaching === 'undefined') {\n            domtoimage.impl.options.styleCaching = defaultOptions.styleCaching;\n        } else {\n            domtoimage.impl.options.styleCaching = options.styleCaching;\n        }\n    }\n\n    function draw(domNode, options) {\n        options = options || {};\n        return toSvg(domNode, options)\n            .then(util.makeImage)\n            .then(function (image) {\n                const scale = typeof options.scale !== 'number' ? 1 : options.scale;\n                const canvas = newCanvas(domNode, scale);\n                const ctx = canvas.getContext('2d');\n                ctx.msImageSmoothingEnabled = false;\n                ctx.imageSmoothingEnabled = false;\n                if (image) {\n                    ctx.scale(scale, scale);\n                    ctx.drawImage(image, 0, 0);\n                }\n                return canvas;\n            });\n\n        function newCanvas(node, scale) {\n            let width = options.width || util.width(node);\n            let height = options.height || util.height(node);\n\n            // per https://www.w3.org/TR/CSS2/visudet.html#inline-replaced-width the default width should be 300px if height\n            // not set, otherwise should be 2:1 aspect ratio for whatever height is specified\n            if (util.isDimensionMissing(width)) {\n                width = util.isDimensionMissing(height) ? 300 : height * 2.0;\n            }\n\n            if (util.isDimensionMissing(height)) {\n                height = width / 2.0;\n            }\n\n            const canvas = document.createElement('canvas');\n            canvas.width = width * scale;\n            canvas.height = height * scale;\n\n            if (options.bgcolor) {\n                const ctx = canvas.getContext('2d');\n                ctx.fillStyle = options.bgcolor;\n                ctx.fillRect(0, 0, canvas.width, canvas.height);\n            }\n\n            return canvas;\n        }\n    }\n\n    let sandbox = null;\n\n    function cloneNode(node, options, parentComputedStyles, ownerWindow) {\n        const filter = options.filter;\n        if (\n            node === sandbox ||\n            util.isHTMLScriptElement(node) ||\n            util.isHTMLStyleElement(node) ||\n            util.isHTMLLinkElement(node) ||\n            (parentComputedStyles !== null && filter && !filter(node))\n        ) {\n            return Promise.resolve();\n        }\n\n        return Promise.resolve(node)\n            .then(makeNodeCopy)\n            .then(adjustCloneBefore)\n            .then(function (clone) {\n                return cloneChildren(clone, getParentOfChildren(node));\n            })\n            .then(adjustCloneAfter)\n            .then(function (clone) {\n                return processClone(clone, node);\n            });\n\n        function makeNodeCopy(original) {\n            if (util.isHTMLCanvasElement(original)) {\n                return util.makeImage(original.toDataURL());\n            }\n            return original.cloneNode(false);\n        }\n\n        function adjustCloneBefore(clone) {\n            if (options.adjustClonedNode) {\n                options.adjustClonedNode(node, clone, false);\n            }\n            return Promise.resolve(clone);\n        }\n\n        function adjustCloneAfter(clone) {\n            if (options.adjustClonedNode) {\n                options.adjustClonedNode(node, clone, true);\n            }\n            return Promise.resolve(clone);\n        }\n\n        function getParentOfChildren(original) {\n            if (util.isElementHostForOpenShadowRoot(original)) {\n                return original.shadowRoot; // jump \"down\" to #shadow-root\n            }\n            return original;\n        }\n\n        function cloneChildren(clone, original) {\n            const originalChildren = getRenderedChildren(original);\n            let done = Promise.resolve();\n\n            if (originalChildren.length !== 0) {\n                const originalComputedStyles = getComputedStyle(\n                    getRenderedParent(original)\n                );\n\n                util.asArray(originalChildren).forEach(function (originalChild) {\n                    done = done.then(function () {\n                        return cloneNode(\n                            originalChild,\n                            options,\n                            originalComputedStyles,\n                            ownerWindow\n                        ).then(function (clonedChild) {\n                            if (clonedChild) {\n                                clone.appendChild(clonedChild);\n                            }\n                        });\n                    });\n                });\n            }\n\n            return done.then(function () {\n                return clone;\n            });\n\n            function getRenderedParent(original) {\n                if (util.isShadowRoot(original)) {\n                    return original.host; // jump up from #shadow-root to its parent <element>\n                }\n                return original;\n            }\n\n            function getRenderedChildren(original) {\n                if (util.isShadowSlotElement(original)) {\n                    const assignedNodes = original.assignedNodes();\n\n                    if (assignedNodes && assignedNodes.length > 0) return assignedNodes; // shadow DOM <slot> has \"assigned nodes\" as rendered children\n                }\n                return original.childNodes;\n            }\n        }\n\n        function processClone(clone, original) {\n            if (!util.isElement(clone) || util.isShadowSlotElement(original)) {\n                return Promise.resolve(clone);\n            }\n\n            return Promise.resolve()\n                .then(cloneStyle)\n                .then(clonePseudoElements)\n                .then(copyUserInput)\n                .then(fixSvg)\n                .then(fixResponsiveImages)\n                .then(function () {\n                    return clone;\n                });\n\n            function fixResponsiveImages() {\n                if (util.isHTMLImageElement(clone))\n                {\n                    // Remove lazy-loading and responsive attributes\n                    clone.removeAttribute('loading');\n\n                    // If the original had srcset or sizes, set src to the resolved image\n                    if (original.srcset || original.sizes) {\n                        clone.removeAttribute('srcset');\n                        clone.removeAttribute('sizes');\n\n                        // Use currentSrc if available, otherwise fallback to src\n                        clone.src = original.currentSrc || original.src;\n                    }\n                }\n            }\n\n            function cloneStyle() {\n                copyStyle(original, clone);\n\n                function copyFont(source, target) {\n                    target.font = source.font;\n                    target.fontFamily = source.fontFamily;\n                    target.fontFeatureSettings = source.fontFeatureSettings;\n                    target.fontKerning = source.fontKerning;\n                    target.fontSize = source.fontSize;\n                    target.fontStretch = source.fontStretch;\n                    target.fontStyle = source.fontStyle;\n                    target.fontVariant = source.fontVariant;\n                    target.fontVariantCaps = source.fontVariantCaps;\n                    target.fontVariantEastAsian = source.fontVariantEastAsian;\n                    target.fontVariantLigatures = source.fontVariantLigatures;\n                    target.fontVariantNumeric = source.fontVariantNumeric;\n                    target.fontVariationSettings = source.fontVariationSettings;\n                    target.fontWeight = source.fontWeight;\n                }\n\n                function copyStyle(sourceElement, targetElement) {\n                    const sourceComputedStyles = getComputedStyle(sourceElement);\n                    if (sourceComputedStyles.cssText) {\n                        targetElement.style.cssText = sourceComputedStyles.cssText;\n                        copyFont(sourceComputedStyles, targetElement.style); // here we re-assign the font props.\n                    } else {\n                        copyUserComputedStyleFast(\n                            options,\n                            sourceElement,\n                            sourceComputedStyles,\n                            parentComputedStyles,\n                            targetElement\n                        );\n\n                        // Remove positioning of initial element, which stops them from being captured correctly\n                        if (parentComputedStyles === null) {\n                            [\n                                'inset-block',\n                                'inset-block-start',\n                                'inset-block-end',\n                            ].forEach((prop) => targetElement.style.removeProperty(prop));\n                            ['left', 'right', 'top', 'bottom'].forEach((prop) => {\n                                if (targetElement.style.getPropertyValue(prop)) {\n                                    targetElement.style.setProperty(prop, '0px');\n                                }\n                            });\n                        }\n                    }\n                }\n            }\n\n            function clonePseudoElements() {\n                const cloneClassName = util.uid();\n\n                [':before', ':after'].forEach(function (element) {\n                    clonePseudoElement(element);\n                });\n\n                function clonePseudoElement(element) {\n                    const style = getComputedStyle(original, element);\n                    const content = style.getPropertyValue('content');\n\n                    if (content === '' || content === 'none') {\n                        return;\n                    }\n\n                    const currentClass = clone.getAttribute('class') || '';\n                    clone.setAttribute('class', `${currentClass} ${cloneClassName}`);\n\n                    const styleElement = document.createElement('style');\n                    styleElement.appendChild(formatPseudoElementStyle());\n                    clone.appendChild(styleElement);\n\n                    function formatPseudoElementStyle() {\n                        const selector = `.${cloneClassName}:${element}`;\n                        const cssText = style.cssText\n                            ? formatCssText()\n                            : formatCssProperties();\n\n                        return document.createTextNode(`${selector}{${cssText}}`);\n\n                        function formatCssText() {\n                            return `${style.cssText} content: ${content};`;\n                        }\n\n                        function formatCssProperties() {\n                            const styleText = util\n                                .asArray(style)\n                                .map(formatProperty)\n                                .join('; ');\n                            return `${styleText};`;\n\n                            function formatProperty(name) {\n                                const propertyValue = style.getPropertyValue(name);\n                                const propertyPriority = style.getPropertyPriority(name)\n                                    ? ' !important'\n                                    : '';\n                                return `${name}: ${propertyValue}${propertyPriority}`;\n                            }\n                        }\n                    }\n                }\n            }\n\n            function copyUserInput() {\n                if (util.isHTMLTextAreaElement(original)) {\n                    clone.innerHTML = original.value;\n                }\n                if (util.isHTMLInputElement(original)) {\n                    clone.setAttribute('value', original.value);\n                }\n            }\n\n            function fixSvg() {\n                if (util.isSVGElement(clone)) {\n                    clone.setAttribute('xmlns', 'http://www.w3.org/2000/svg');\n\n                    if (util.isSVGRectElement(clone)) {\n                        ['width', 'height'].forEach(function (attribute) {\n                            const value = clone.getAttribute(attribute);\n                            if (value) {\n                                clone.style.setProperty(attribute, value);\n                            }\n                        });\n                    }\n                }\n            }\n        }\n    }\n\n    function embedFonts(node) {\n        return fontFaces.resolveAll().then(function (cssText) {\n            if (cssText !== '') {\n                const styleNode = document.createElement('style');\n                node.appendChild(styleNode);\n                styleNode.appendChild(document.createTextNode(cssText));\n            }\n            return node;\n        });\n    }\n\n    function inlineImages(node) {\n        return images.inlineAll(node).then(function () {\n            return node;\n        });\n    }\n\n    function newUtil() {\n        let uid_index = 0;\n\n        return {\n            escape: escapeRegEx,\n            isDataUrl: isDataUrl,\n            canvasToBlob: canvasToBlob,\n            resolveUrl: resolveUrl,\n            getAndEncode: getAndEncode,\n            uid: uid,\n            asArray: asArray,\n            escapeXhtml: escapeXhtml,\n            makeImage: makeImage,\n            width: width,\n            height: height,\n            getWindow: getWindow,\n            isElement: isElement,\n            isElementHostForOpenShadowRoot: isElementHostForOpenShadowRoot,\n            isShadowRoot: isShadowRoot,\n            isInShadowRoot: isInShadowRoot,\n            isHTMLElement: isHTMLElement,\n            isHTMLCanvasElement: isHTMLCanvasElement,\n            isHTMLInputElement: isHTMLInputElement,\n            isHTMLImageElement: isHTMLImageElement,\n            isHTMLLinkElement: isHTMLLinkElement,\n            isHTMLScriptElement: isHTMLScriptElement,\n            isHTMLStyleElement: isHTMLStyleElement,\n            isHTMLTextAreaElement: isHTMLTextAreaElement,\n            isShadowSlotElement: isShadowSlotElement,\n            isSVGElement: isSVGElement,\n            isSVGRectElement: isSVGRectElement,\n            isDimensionMissing: isDimensionMissing,\n        };\n\n        function getWindow(node) {\n            const ownerDocument = node ? node.ownerDocument : undefined;\n            return (\n                (ownerDocument ? ownerDocument.defaultView : undefined) ||\n                window ||\n                global\n            );\n        }\n\n        function isElementHostForOpenShadowRoot(value) {\n            return isElement(value) && value.shadowRoot !== null;\n        }\n\n        function isShadowRoot(value) {\n            return value instanceof getWindow(value).ShadowRoot;\n        }\n\n        function isInShadowRoot(value) {\n            // not calling the method, getting the method\n            if (value === null || value === undefined || value.getRootNode === undefined)\n                return false;\n            return isShadowRoot(value.getRootNode());\n        }\n\n        function isElement(value) {\n            return value instanceof getWindow(value).Element;\n        }\n\n        function isHTMLCanvasElement(value) {\n            return value instanceof getWindow(value).HTMLCanvasElement;\n        }\n\n        function isHTMLElement(value) {\n            return value instanceof getWindow(value).HTMLElement;\n        }\n\n        function isHTMLImageElement(value) {\n            return value instanceof getWindow(value).HTMLImageElement;\n        }\n\n        function isHTMLInputElement(value) {\n            return value instanceof getWindow(value).HTMLInputElement;\n        }\n\n        function isHTMLLinkElement(value) {\n            return value instanceof getWindow(value).HTMLLinkElement;\n        }\n\n        function isHTMLScriptElement(value) {\n            return value instanceof getWindow(value).HTMLScriptElement;\n        }\n\n        function isHTMLStyleElement(value) {\n            return value instanceof getWindow(value).HTMLStyleElement;\n        }\n\n        function isHTMLTextAreaElement(value) {\n            return value instanceof getWindow(value).HTMLTextAreaElement;\n        }\n\n        function isShadowSlotElement(value) {\n            return (\n                isInShadowRoot(value) && value instanceof getWindow(value).HTMLSlotElement\n            );\n        }\n\n        function isSVGElement(value) {\n            return value instanceof getWindow(value).SVGElement;\n        }\n\n        function isSVGRectElement(value) {\n            return value instanceof getWindow(value).SVGRectElement;\n        }\n\n        function isDataUrl(url) {\n            return url.search(/^(data:)/) !== -1;\n        }\n\n        function isDimensionMissing(value) {\n            return isNaN(value) || value <= 0;\n        }\n\n        function asBlob(canvas) {\n            return new Promise(function (resolve) {\n                const binaryString = atob(canvas.toDataURL().split(',')[1]);\n                const length = binaryString.length;\n                const binaryArray = new Uint8Array(length);\n\n                for (let i = 0; i < length; i++) {\n                    binaryArray[i] = binaryString.charCodeAt(i);\n                }\n\n                resolve(\n                    new Blob([binaryArray], {\n                        type: 'image/png',\n                    })\n                );\n            });\n        }\n\n        function canvasToBlob(canvas) {\n            if (canvas.toBlob) {\n                return new Promise(function (resolve) {\n                    canvas.toBlob(resolve);\n                });\n            }\n\n            return asBlob(canvas);\n        }\n\n        function resolveUrl(url, baseUrl) {\n            const doc = document.implementation.createHTMLDocument();\n            const base = doc.createElement('base');\n            doc.head.appendChild(base);\n            const a = doc.createElement('a');\n            doc.body.appendChild(a);\n            base.href = baseUrl;\n            a.href = url;\n            return a.href;\n        }\n\n        function uid() {\n            return `u${fourRandomChars()}${uid_index++}`;\n\n            function fourRandomChars() {\n                /* see https://stackoverflow.com/a/6248722/2519373 */\n                return `0000${((Math.random() * Math.pow(36, 4)) << 0).toString(\n                    36\n                )}`.slice(-4);\n            }\n        }\n\n        function makeImage(uri) {\n            if (uri === 'data:,') {\n                return Promise.resolve();\n            }\n\n            return new Promise(function (resolve, reject) {\n                // Create an SVG element to house the image\n                const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n\n                // and create the Image element to insert into that wrapper\n                const image = new Image();\n\n                if (domtoimage.impl.options.useCredentials) {\n                    image.crossOrigin = 'use-credentials';\n                }\n\n                image.onload = function () {\n                    // Cleanup: remove theimage from the document\n                    document.body.removeChild(svg);\n\n                    if (window && window.requestAnimationFrame) {\n                        // In order to work around a Firefox bug (webcompat/web-bugs#119834) we\n                        // need to wait one extra frame before it's safe to read the image data.\n                        window.requestAnimationFrame(function () {\n                            resolve(image);\n                        });\n                    } else {\n                        // If we don't have a window or requestAnimationFrame function proceed immediately.\n                        resolve(image);\n                    }\n                };\n\n                image.onerror = (error) => {\n                    // Cleanup: remove the image from the document\n                    document.body.removeChild(svg);\n\n                    reject(error);\n                };\n\n                svg.appendChild(image);\n                image.src = uri;\n\n                // Add the SVG to the document body (invisible)\n                document.body.appendChild(svg);\n            });\n        }\n\n        function getAndEncode(url) {\n            let cacheEntry = domtoimage.impl.urlCache.find(function (el) {\n                return el.url === url;\n            });\n\n            if (!cacheEntry) {\n                cacheEntry = {\n                    url: url,\n                    promise: null,\n                };\n                domtoimage.impl.urlCache.push(cacheEntry);\n            }\n\n            if (cacheEntry.promise === null) {\n                if (domtoimage.impl.options.cacheBust) {\n                    // Cache bypass so we don't have CORS issues with cached images\n                    // Source: https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest/Using_XMLHttpRequest#Bypassing_the_cache\n                    url += (/\\?/.test(url) ? '&' : '?') + new Date().getTime();\n                }\n\n                cacheEntry.promise = new Promise(function (resolve) {\n                    const xhr = new XMLHttpRequest();\n                    xhr.timeout = domtoimage.impl.options.httpTimeout;\n                    xhr.onerror = placehold;\n                    xhr.ontimeout = placehold;\n                    xhr.onloadend = function () {\n                        if (xhr.readyState === XMLHttpRequest.DONE) {\n                            const status = xhr.status;\n                            // In local files, status is 0 upon success in Mozilla Firefox\n                            if (\n                                (status === 0 && url.toLowerCase().startsWith('file://')) ||\n                                (status >= 200 && status <= 300 && xhr.response !== null)\n                            ) {\n                                const response = xhr.response;\n                                if (!(response instanceof Blob)) {\n                                    fail(\n                                        'Expected response to be a Blob, but got: ' +\n                                            typeof response\n                                    );\n                                }\n                                const reader = new FileReader();\n                                reader.onloadend = function () {\n                                    const result = reader.result;\n                                    resolve(result);\n                                };\n                                try {\n                                    reader.readAsDataURL(response);\n                                } catch (ex) {\n                                    fail(\n                                        'Failed to read the response as Data URL: ' +\n                                            ex.toString()\n                                    );\n                                }\n                            } else {\n                                placehold();\n                            }\n                        }\n                    };\n\n                    function fail(message) {\n                        console.error(message);\n                        resolve('');\n                    }\n\n                    function placehold() {\n                        const placeholder = domtoimage.impl.options.imagePlaceholder;\n\n                        if (placeholder) {\n                            resolve(placeholder);\n                        } else {\n                            fail('Status:' + xhr.status + ' while fetching resource: ' + url);\n                        }\n                    }\n\n                    function handleJson(data) {\n                        try {\n                            return JSON.parse(JSON.stringify(data));\n                        } catch (e) {\n                            fail('corsImg.data is missing or invalid:' + e.toString());\n                        }\n                    }\n\n                    if (domtoimage.impl.options.useCredentialsFilters.length > 0) {\n                        domtoimage.impl.options.useCredentials =\n                            domtoimage.impl.options.useCredentialsFilters.filter(\n                                (credentialsFilter) => url.search(credentialsFilter) >= 0\n                            ).length > 0;\n                    }\n\n                    if (domtoimage.impl.options.useCredentials) {\n                        xhr.withCredentials = true;\n                    }\n\n                    if (\n                        domtoimage.impl.options.corsImg &&\n                        url.indexOf('http') === 0 &&\n                        url.indexOf(window.location.origin) === -1\n                    ) {\n                        const method =\n                            (\n                                domtoimage.impl.options.corsImg.method || 'GET'\n                            ).toUpperCase() === 'POST'\n                                ? 'POST'\n                                : 'GET';\n                        xhr.open(\n                            method,\n                            (domtoimage.impl.options.corsImg.url || '').replace(\n                                '#{cors}',\n                                url\n                            ),\n                            true\n                        );\n\n                        let isJson = false;\n                        const headers = domtoimage.impl.options.corsImg.headers || {};\n                        Object.keys(headers).forEach(function (key) {\n                            if (headers[key].indexOf('application/json') !== -1) {\n                                isJson = true;\n                            }\n                            xhr.setRequestHeader(key, headers[key]);\n                        });\n\n                        const corsData = handleJson(\n                            domtoimage.impl.options.corsImg.data || ''\n                        );\n\n                        Object.keys(corsData).forEach(function (key) {\n                            if (typeof corsData[key] === 'string') {\n                                corsData[key] = corsData[key].replace('#{cors}', url);\n                            }\n                        });\n\n                        xhr.responseType = 'blob';\n                        xhr.send(isJson ? JSON.stringify(corsData) : corsData);\n                    } else {\n                        xhr.open('GET', url, true);\n                        xhr.responseType = 'blob';\n                        xhr.send();\n                    }\n                });\n            }\n            return cacheEntry.promise;\n        }\n\n        function escapeRegEx(string) {\n            return string.replace(/([.*+?^${}()|[\\]/\\\\])/g, '\\\\$1');\n        }\n\n        function asArray(arrayLike) {\n            const array = [];\n            const length = arrayLike.length;\n            for (let i = 0; i < length; i++) {\n                array.push(arrayLike[i]);\n            }\n\n            return array;\n        }\n\n        function escapeXhtml(string) {\n            return string.replace(/%/g, '%25').replace(/#/g, '%23').replace(/\\n/g, '%0A');\n        }\n\n        function width(node) {\n            const width = px(node, 'width');\n\n            if (!isNaN(width)) return width;\n\n            const leftBorder = px(node, 'border-left-width');\n            const rightBorder = px(node, 'border-right-width');\n            return node.scrollWidth + leftBorder + rightBorder;\n        }\n\n        function height(node) {\n            const height = px(node, 'height');\n\n            if (!isNaN(height)) return height;\n\n            const topBorder = px(node, 'border-top-width');\n            const bottomBorder = px(node, 'border-bottom-width');\n            return node.scrollHeight + topBorder + bottomBorder;\n        }\n\n        function px(node, styleProperty) {\n            if (node.nodeType === ELEMENT_NODE) {\n                let value = getComputedStyle(node).getPropertyValue(styleProperty);\n                if (value.slice(-2) === 'px') {\n                    value = value.slice(0, -2);\n                    return parseFloat(value);\n                }\n            }\n\n            return NaN;\n        }\n    }\n\n    function newInliner() {\n        const URL_REGEX = /url\\(\\s*([\"']?)((?:\\\\.|[^\\\\)])+)\\1\\s*\\)/gm;\n\n        return {\n            inlineAll: inlineAll,\n            shouldProcess: shouldProcess,\n            impl: {\n                readUrls: readUrls,\n                inline: inline,\n                urlAsRegex: urlAsRegex,\n            },\n        };\n\n        function shouldProcess(string) {\n            return string.search(URL_REGEX) !== -1;\n        }\n\n        function readUrls(string) {\n            const result = [];\n            let match;\n            while ((match = URL_REGEX.exec(string)) !== null) {\n                result.push(match[2]);\n            }\n            return result.filter(function (url) {\n                return !util.isDataUrl(url);\n            });\n        }\n\n        function urlAsRegex(urlValue) {\n            return new RegExp(`url\\\\(([\"']?)(${util.escape(urlValue)})\\\\1\\\\)`, 'gm');\n        }\n\n        function inline(string, url, baseUrl, get) {\n            return Promise.resolve(url)\n                .then(function (urlValue) {\n                    return baseUrl ? util.resolveUrl(urlValue, baseUrl) : urlValue;\n                })\n                .then(get || util.getAndEncode)\n                .then(function (dataUrl) {\n                    const pattern = urlAsRegex(url);\n                    return string.replace(pattern, `url($1${dataUrl}$1)`);\n                });\n        }\n\n        function inlineAll(string, baseUrl, get) {\n            if (nothingToInline()) {\n                return Promise.resolve(string);\n            }\n\n            return Promise.resolve(string)\n                .then(readUrls)\n                .then(function (urls) {\n                    let done = Promise.resolve(string);\n                    urls.forEach(function (url) {\n                        done = done.then(function (prefix) {\n                            return inline(prefix, url, baseUrl, get);\n                        });\n                    });\n                    return done;\n                });\n\n            function nothingToInline() {\n                return !shouldProcess(string);\n            }\n        }\n    }\n\n    function newFontFaces() {\n        return {\n            resolveAll: resolveAll,\n            impl: {\n                readAll: readAll,\n            },\n        };\n\n        function resolveAll() {\n            return readAll()\n                .then(function (webFonts) {\n                    return Promise.all(\n                        webFonts.map(function (webFont) {\n                            return webFont.resolve();\n                        })\n                    );\n                })\n                .then(function (cssStrings) {\n                    return cssStrings.join('\\n');\n                });\n        }\n\n        function readAll() {\n            return Promise.resolve(util.asArray(document.styleSheets))\n                .then(getCssRules)\n                .then(selectWebFontRules)\n                .then(function (rules) {\n                    return rules.map(newWebFont);\n                });\n\n            function selectWebFontRules(cssRules) {\n                return cssRules\n                    .filter(function (rule) {\n                        return rule.type === CSSRule.FONT_FACE_RULE;\n                    })\n                    .filter(function (rule) {\n                        return inliner.shouldProcess(rule.style.getPropertyValue('src'));\n                    });\n            }\n\n            function getCssRules(styleSheets) {\n                const cssRules = [];\n                styleSheets.forEach(function (sheet) {\n                    const sheetProto = Object.getPrototypeOf(sheet);\n                    // NOSONAR\n                    if (Object.prototype.hasOwnProperty.call(sheetProto, 'cssRules')) {\n                        try {\n                            util.asArray(sheet.cssRules || []).forEach(\n                                cssRules.push.bind(cssRules)\n                            );\n                        } catch (e) {\n                            console.error(\n                                'domtoimage: Error while reading CSS rules from: ' +\n                                    sheet.href,\n                                e.toString()\n                            );\n                        }\n                    }\n                });\n                return cssRules;\n            }\n\n            function newWebFont(webFontRule) {\n                return {\n                    resolve: function resolve() {\n                        // NOSONAR\n                        const baseUrl = (webFontRule.parentStyleSheet || {}).href;\n                        return inliner.inlineAll(webFontRule.cssText, baseUrl);\n                    },\n                    src: function () {\n                        return webFontRule.style.getPropertyValue('src');\n                    },\n                };\n            }\n        }\n    }\n\n    function newImages() {\n        return {\n            inlineAll: inlineAll,\n            impl: {\n                newImage: newImage,\n            },\n        };\n\n        function newImage(element) {\n            return {\n                inline: inline,\n            };\n\n            function inline(get) {\n                if (util.isDataUrl(element.src)) {\n                    return Promise.resolve();\n                }\n\n                return Promise.resolve(element.src)\n                    .then(get || util.getAndEncode)\n                    .then(function (dataUrl) {\n                        return new Promise(function (resolve) {\n                            element.onload = resolve;\n                            // for any image with invalid src(such as <img src />), just ignore it\n                            element.onerror = resolve;\n                            element.src = dataUrl;\n                        });\n                    });\n            }\n        }\n\n        function inlineAll(node) {\n            if (!util.isElement(node)) {\n                return Promise.resolve(node);\n            }\n\n            return inlineCSSProperty(node).then(function () {\n                if (util.isHTMLImageElement(node)) {\n                    return newImage(node).inline();\n                } else {\n                    return Promise.all(\n                        util.asArray(node.childNodes).map(function (child) {\n                            return inlineAll(child);\n                        })\n                    );\n                }\n            });\n\n            function inlineCSSProperty(node) {\n                const properties = ['background', 'background-image'];\n\n                const inliningTasks = properties.map(function (propertyName) {\n                    const value = node.style.getPropertyValue(propertyName);\n                    const priority = node.style.getPropertyPriority(propertyName);\n\n                    if (!value) {\n                        return Promise.resolve();\n                    }\n\n                    return inliner.inlineAll(value).then(function (inlinedValue) {\n                        node.style.setProperty(propertyName, inlinedValue, priority);\n                    });\n                });\n\n                return Promise.all(inliningTasks).then(function () {\n                    return node;\n                });\n            }\n        }\n    }\n\n    function setStyleProperty(targetStyle, name, value, priority) {\n        const needs_prefixing = ['background-clip'].indexOf(name) >= 0;\n        if (priority) {\n            targetStyle.setProperty(name, value, priority);\n            if (needs_prefixing) {\n                targetStyle.setProperty(`-webkit-${name}`, value, priority);\n            }\n        } else {\n            targetStyle.setProperty(name, value);\n            if (needs_prefixing) {\n                targetStyle.setProperty(`-webkit-${name}`, value);\n            }\n        }\n    }\n\n    function copyUserComputedStyleFast(\n        options,\n        sourceElement,\n        sourceComputedStyles,\n        parentComputedStyles,\n        targetElement\n    ) {\n        const defaultStyle = domtoimage.impl.options.copyDefaultStyles\n            ? getDefaultStyle(options, sourceElement)\n            : {};\n        const targetStyle = targetElement.style;\n\n        util.asArray(sourceComputedStyles).forEach(function (name) {\n            if (options.filterStyles) {\n                if (!options.filterStyles(sourceElement, name)) {\n                    return;\n                }\n            }\n\n            const sourceValue = sourceComputedStyles.getPropertyValue(name);\n            const defaultValue = defaultStyle[name];\n            const parentValue = parentComputedStyles\n                ? parentComputedStyles.getPropertyValue(name)\n                : undefined;\n\n            // Ignore setting style property on clone node, if already it has a style (through adjustCloneNode)\n            const targetValue = targetStyle.getPropertyValue(name);\n            if (targetValue) return;\n\n            // If the style does not match the default, or it does not match the parent's, set it. We don't know which\n            // styles are inherited from the parent and which aren't, so we have to always check both.\n            if (\n                sourceValue !== defaultValue ||\n                (parentComputedStyles && sourceValue !== parentValue)\n            ) {\n                const priority = sourceComputedStyles.getPropertyPriority(name);\n                setStyleProperty(targetStyle, name, sourceValue, priority);\n            }\n        });\n    }\n\n    let removeDefaultStylesTimeoutId = null;\n    let tagNameDefaultStyles = {};\n\n    const ascentStoppers = [\n        // these come from https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\n        'ADDRESS',\n        'ARTICLE',\n        'ASIDE',\n        'BLOCKQUOTE',\n        'DETAILS',\n        'DIALOG',\n        'DD',\n        'DIV',\n        'DL',\n        'DT',\n        'FIELDSET',\n        'FIGCAPTION',\n        'FIGURE',\n        'FOOTER',\n        'FORM',\n        'H1',\n        'H2',\n        'H3',\n        'H4',\n        'H5',\n        'H6',\n        'HEADER',\n        'HGROUP',\n        'HR',\n        'LI',\n        'MAIN',\n        'NAV',\n        'OL',\n        'P',\n        'PRE',\n        'SECTION',\n        'SVG',\n        'TABLE',\n        'UL',\n        // this is some non-standard ones\n        'math', // intentionally lowercase, thanks Safari\n        'svg', // in case we have an svg embedded element\n        // these are ultimate stoppers in case something drastic changes in how the DOM works\n        'BODY',\n        'HEAD',\n        'HTML',\n    ];\n\n    function getDefaultStyle(options, sourceElement) {\n        const tagHierarchy = computeTagHierarchy(sourceElement);\n        const tagKey = computeTagKey(tagHierarchy);\n        if (tagNameDefaultStyles[tagKey]) {\n            return tagNameDefaultStyles[tagKey];\n        }\n\n        // We haven't cached the answer for that hierachy yet, build a\n        // sandbox (if not yet created), fill it with the hierarchy that\n        // matters, and grab the default styles associated\n        const sandboxWindow = ensureSandboxWindow();\n        const defaultElement = constructElementHierachy(\n            sandboxWindow.document,\n            tagHierarchy\n        );\n        const defaultStyle = computeStyleForDefaults(sandboxWindow, defaultElement);\n        destroyElementHierarchy(defaultElement);\n\n        tagNameDefaultStyles[tagKey] = defaultStyle;\n        return defaultStyle;\n\n        function computeTagHierarchy(sourceNode) {\n            const tagNames = [];\n\n            do {\n                if (sourceNode.nodeType === ELEMENT_NODE) {\n                    const tagName = sourceNode.tagName;\n                    tagNames.push(tagName);\n\n                    if (ascentStoppers.includes(tagName)) {\n                        break;\n                    }\n                }\n\n                sourceNode = sourceNode.parentNode;\n            } while (sourceNode);\n\n            return tagNames;\n        }\n\n        function computeTagKey(tagHierarchy) {\n            if (options.styleCaching === 'relaxed') {\n                // pick up only the ascent-stopping element tag and the element tag itself\n                /* jshint unused:true */\n                return tagHierarchy\n                    .filter((_, i, a) => i === 0 || i === a.length - 1)\n                    .join('>');\n            }\n            // for all other cases, fall back the the entire path\n            return tagHierarchy.join('>'); // it's like CSS\n        }\n\n        function constructElementHierachy(sandboxDocument, tagHierarchy) {\n            let element = sandboxDocument.body;\n            do {\n                const childTagName = tagHierarchy.pop();\n                const childElement = sandboxDocument.createElement(childTagName);\n                element.appendChild(childElement);\n                element = childElement;\n            } while (tagHierarchy.length > 0);\n\n            // Ensure that there is some content, so that properties like margin are applied.\n            // we use zero-width space to handle FireFox adding a pixel\n            element.textContent = '\\u200b';\n            return element;\n        }\n\n        function computeStyleForDefaults(sandboxWindow, defaultElement) {\n            const defaultStyle = {};\n            const defaultComputedStyle = sandboxWindow.getComputedStyle(defaultElement);\n\n            // Copy styles to an object, making sure that 'width' and 'height' are given the default value of 'auto', since\n            // their initial value is always 'auto' despite that the default computed value is sometimes an absolute length.\n            util.asArray(defaultComputedStyle).forEach(function (name) {\n                defaultStyle[name] =\n                    name === 'width' || name === 'height'\n                        ? 'auto'\n                        : defaultComputedStyle.getPropertyValue(name);\n            });\n            return defaultStyle;\n        }\n\n        function destroyElementHierarchy(element) {\n            do {\n                const parentElement = element.parentElement;\n                if (parentElement !== null) {\n                    parentElement.removeChild(element);\n                }\n                element = parentElement;\n            } while (element && element.tagName !== 'BODY');\n        }\n    }\n\n    function ensureSandboxWindow() {\n        if (sandbox) {\n            return sandbox.contentWindow;\n        }\n\n        // figure out how this document is defined (doctype and charset)\n        const charsetToUse = document.characterSet || 'UTF-8';\n        const docType = document.doctype;\n        const docTypeDeclaration = docType\n            ? `<!DOCTYPE ${escapeHTML(docType.name)} ${escapeHTML(\n                  docType.publicId\n              )} ${escapeHTML(docType.systemId)}`.trim() + '>'\n            : '';\n\n        // Create a hidden sandbox <iframe> element within we can create default HTML elements and query their\n        // computed styles. Elements must be rendered in order to query their computed styles. The <iframe> won't\n        // render at all with `display: none`, so we have to use `visibility: hidden` with `position: fixed`.\n        sandbox = document.createElement('iframe');\n        sandbox.id = 'domtoimage-sandbox-' + util.uid();\n        sandbox.style.visibility = 'hidden';\n        sandbox.style.position = 'fixed';\n        document.body.appendChild(sandbox);\n\n        return tryTechniques(\n            sandbox,\n            docTypeDeclaration,\n            charsetToUse,\n            'domtoimage-sandbox'\n        );\n\n        function escapeHTML(unsafeText) {\n            if (unsafeText) {\n                const div = document.createElement('div');\n                div.innerText = unsafeText;\n                return div.innerHTML;\n            } else {\n                return '';\n            }\n        }\n\n        function tryTechniques(sandbox, doctype, charset, title) {\n            // try the good old-fashioned document write with all the correct attributes set\n            try {\n                sandbox.contentWindow.document.write(\n                    `${doctype}<html><head><meta charset='${charset}'><title>${title}</title></head><body></body></html>`\n                );\n                return sandbox.contentWindow;\n            } catch (_) {\n                // swallow exception and fall through to next technique\n            }\n\n            const metaCharset = document.createElement('meta');\n            metaCharset.setAttribute('charset', charset);\n\n            // let's attempt it using srcdoc, so we can still set the doctype and charset\n            try {\n                const sandboxDocument = document.implementation.createHTMLDocument(title);\n                sandboxDocument.head.appendChild(metaCharset);\n                const sandboxHTML = doctype + sandboxDocument.documentElement.outerHTML;\n                sandbox.setAttribute('srcdoc', sandboxHTML);\n                return sandbox.contentWindow;\n            } catch (_) {\n                // NOSONAR\n                // swallow exception and fall through to the simplest path\n            }\n\n            // let's attempt it using contentDocument... here we're not able to set the doctype\n            sandbox.contentDocument.head.appendChild(metaCharset);\n            sandbox.contentDocument.title = title;\n            return sandbox.contentWindow;\n        }\n    }\n\n    function removeSandbox() {\n        if (sandbox) {\n            document.body.removeChild(sandbox);\n            sandbox = null;\n        }\n\n        if (removeDefaultStylesTimeoutId) {\n            clearTimeout(removeDefaultStylesTimeoutId);\n        }\n\n        removeDefaultStylesTimeoutId = setTimeout(() => {\n            removeDefaultStylesTimeoutId = null;\n            tagNameDefaultStyles = {};\n        }, 20 * 1000);\n    }\n})(this);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}